var searchIndex = JSON.parse('{\
"libgmtr":{"doc":"","t":"IIAKKANNNENNNNNNNNNLLLLLLLLLLLLLLLLF","n":["IntoCipherVal","IntoNumReduction","cipher","cipher_val","num_reduction","utils","Agrippa","AgrippaOrdinal","AgrippaReduction","Cipher","FrancisBacon","FrancisBaconis","FullReduction","FullReductionReverse","Ordinal","OrdinalReverse","Satanic","Sumerian","SumerianReverse","borrow","borrow_mut","clone","clone_into","default","eq","fmt","fmt","from","into","to_owned","to_string","try_from","try_into","type_id","val","calc_letter_val"],"q":[[0,"libgmtr"],[6,"libgmtr::cipher"],[35,"libgmtr::utils"]],"d":["","","","Calculate the value for a given cipher","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Examples",""],"i":[0,0,0,10,11,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],"f":[0,0,0,[1,2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[],1],[[1,1],3],[[1,4],5],[[1,4],5],[[]],[[]],[[]],[[],6],[[],7],[[],7],[[],8],[[1,6],2],[[9,1],2]],"c":[],"p":[[4,"Cipher"],[15,"u32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[15,"char"],[8,"IntoCipherVal"],[8,"IntoNumReduction"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
