var searchIndex = JSON.parse('{\
"libgmtr":{"doc":"","t":[8,0,10,0,13,13,13,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["CipherValue","cipher","cipher_val","utils","Agrippa","AgrippaOrdinal","AgrippaReduction","Cipher","FrancisBacon","FrancisBaconis","FullReduction","FullReductionReverse","Ordinal","OrdinalReverse","Satanic","Sumerian","SumerianReverse","borrow","borrow_mut","clone","clone_into","default","eq","fmt","fmt","from","into","to_owned","to_string","try_from","try_into","type_id","get_letter_value"],"q":["libgmtr","","","","libgmtr::cipher","","","","","","","","","","","","","","","","","","","","","","","","","","","","libgmtr::utils"],"d":["","","Calculate the value of a given cipher","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,10,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],"f":[0,0,[1,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[],1],[[1,1],3],[[1,4],5],[[1,4],5],[[]],[[]],[[]],[[],6],[[],7],[[],7],[[],8],[[9,1],2]],"p":[[4,"Cipher"],[15,"u32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[15,"char"],[8,"CipherValue"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
